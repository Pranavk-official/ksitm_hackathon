datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id           String  @id @default(uuid()) @map("UserID")
    name         String  @map("Name")
    email        String  @unique @map("Email")
    mobile       String? @map("Mobile")
    salt         String  @map("Salt")
    passwordHash String  @map("PasswordHash")

    // relation to Role
    role   Role?   @relation(fields: [roleId], references: [id])
    roleId String? @map("Role")

    createdAt DateTime @default(now()) @map("CreatedAt")

    // back relations
    serviceRequests ServiceRequest[]
    auditLogs       AuditLog[]

    @@map("users")
}

model Role {
    id   String   @id @default(uuid()) @map("RoleID")
    name RoleType @unique @default(CITIZEN) @map("RoleName")

    users User[]

    @@map("roles")
}

enum ServiceRequestStatus {
    PENDING
    APPROVED
    REJECTED
    COMPLETED
}

model ServiceRequest {
    id          String               @id @default(uuid()) @map("RequestID")
    user        User                 @relation(fields: [userId], references: [id])
    userId      String               @map("UserID")
    serviceType String               @map("ServiceType")
    description String?              @map("Description")
    feeAmount   Decimal              @map("FeeAmount") @db.Decimal(10, 2)
    status      ServiceRequestStatus @default(PENDING) @map("Status")
    createdAt   DateTime             @default(now()) @map("CreatedAt")

    @@map("service_requests")
}

model AuditLog {
    id        String   @id @default(uuid()) @map("LogID")
    user      User?    @relation(fields: [userId], references: [id])
    userId    String?  @map("UserID")
    action    String   @map("Action")
    timestamp DateTime @default(now()) @map("Timestamp")

    @@map("audit_logs")
}

// Enums
enum RoleType {
    ADMIN
    OFFICER
    CITIZEN
}
